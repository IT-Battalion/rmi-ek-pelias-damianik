plugins {
    id 'java'
    id 'application'
}

// e.g.: gradle engine --args="localhost"
// the argument is <host of the rmi registry server>
task engine(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'engine.ComputeEngine'
    standardInput = System.in
}

// e.g.: gradle compute --args="localhost 1234"
// the arguments are <host of the rmi registry server> and <number of digits of pi to calculate>
task compute(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'client.ComputePi'
}

// e.g.: gradle compute --args="localhost 1234"
// the arguments are <host of the rmi registry server> and <index in the fibonacci sequence>
task computeFibonacci(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'client.ComputeFibonacci'
}

// e.g.: gradle balance --args="192.168.198.128"
// the argument is <main rmi host>
task balance(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'loadbalancer.LoadBalancer'
    standardInput = System.in
}

dependencies {
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'junit:junit:4.12'
}

repositories {
    jcenter()
}
